[
  {
    "slug": "create-a-donation-dapp-on-polygon",
    "title": "Create a donation dApp on Polygon",
    "description": "Learn how to create a donation dApp on Polygon to award your favorite content creator with MATIC tokens",
    "tags": ["Polygon", "JS/TS", "Solidity", "Javascript", "Solidity"],
    "difficulty": "Beginner",
    "id": 26,
    "streamId": "kjzl6cwe1jw148ka8mqb1vrr0sqovpoomg2n27fxsgeii2ryejufpswsnhlbxw1"
  },
  {
    "slug": "build-a-poe-decentralized-app",
    "title": "Build a PoE Decentralized App",
    "description": "Learn to create a custom \"Proof of Existence\" dApp using the Substrate blockchain development framework and FRAME runtime libraries",
    "tags": ["Polkadot", "JS/TS", "Rust", "React", "NodeJS"],
    "difficulty": "Beginner",
    "id": 27,
    "streamId": "kjzl6cwe1jw146g2znbs836wuxgqw4s5rcb57s6h21hply4q9l31meyiwia5zuf"
  },
  {
    "slug": "explaining-solana-for-beginners",
    "title": "Solana's Innovations - a jargon-free explanation",
    "description": "Learn about Solana with easy language aimed at beginners",
    "tags": ["Solana"],
    "difficulty": "Beginner",
    "id": 28,
    "streamId": "kjzl6cwe1jw148ukzmlprn88tt17fw37zyum0arqa8a5qx8uffqniabglsn1r1c"
  },
  {
    "slug": "substrate-kitties-dispatchables-and-events",
    "title": "Substrate Kitties - Dispatchables & Events",
    "description": "Learn how to use storage with your Substrate Pallet",
    "tags": ["Polkadot", "Rust", "Rust"],
    "difficulty": "Beginner",
    "id": 29,
    "streamId": "kjzl6cwe1jw14901jltktmekhindyyxeo3qdvfhwd8q9fe91t4vkwirl8lhcjox"
  },
  {
    "slug": "transferring-tokens-with-polygon-pos-bridge",
    "title": "Transferring tokens with the Polygon PoS bridge",
    "description": "Learn how to move tokens between Polygon and Ethereum using the Proof of Stake bridge.",
    "tags": ["Polygon", "JS/TS", "Smart contracts", "Javascript", "Metamask"],
    "difficulty": "Beginner",
    "id": 30,
    "streamId": "kjzl6cwe1jw146uads9bk5ps50eb2yh3gyfwuwncpoq3jyecdzlpqxe1qe9txyv"
  },
  {
    "slug": "querying-the-terra-blockchain",
    "title": "Querying the Terra blockchain",
    "description": "Learn how to pull information from the Terra Blockchain using DataHub",
    "tags": ["Terra", "JS/TS", "NodeJS", "Javascript"],
    "difficulty": "Beginner",
    "id": 31,
    "streamId": "kjzl6cwe1jw145l0a784l90lo7snreeactqp84ev28aggyimmouj00f9p537i4t"
  },
  {
    "slug": "create-a-lending-marketplace-dapp-on-polygon",
    "title": "Create a Lending Marketplace dApp on Polygon",
    "description": "Make your own lending marketplace on Polygon",
    "tags": [
      "Polygon",
      "JS/TS",
      "Solidity",
      "Smart contracts",
      "Solidity",
      "Typescript"
    ],
    "difficulty": "Experienced",
    "id": 32,
    "streamId": "kjzl6cwe1jw145ihjqkbau6v6qww7c47cfr1wc6iqe1du4qj20y270wo9on4ecz"
  },
  {
    "slug": "celo-ubeswap-tutorial",
    "title": "How to use Ubeswap DEX on Celo",
    "description": "This tutorial is a part of DeFi series where people can learn how to participate in DeFi on the Celo Blockchain.",
    "tags": ["Celo"],
    "difficulty": "Beginner",
    "id": 33,
    "streamId": "kjzl6cwe1jw148f71tzn06bs18128kd1u7nj09k9ko233f2vczxbzvs6a7xxbxz"
  },
  {
    "slug": "mint-your-own-fungible-token-on-tezos",
    "title": "Mint your own Fungible Token",
    "description": "Learn how to create your own fungible tokens on Tezos using SmartPy",
    "tags": ["Tezos", "Python", "Smart contracts"],
    "difficulty": "Beginner",
    "id": 34,
    "streamId": "kjzl6cwe1jw149ej4k2nndeu62qrngykubk7je7iidj552ff0ozgepdlhnti732"
  },
  {
    "slug": "solana-token-streaming-protocol",
    "title": "Build a token streaming protocol",
    "description": "Learn how to make your own token streaming protocol on Solana",
    "tags": ["Solana", "Rust", "NodeJS", "Rust"],
    "difficulty": "Beginner",
    "id": 35,
    "streamId": "kjzl6cwe1jw146v08y2evxazc752uwyx2nbqfgoqdcttjv8k0yd2mpk1l6yceeg"
  },
  {
    "slug": "create-an-auction-with-bidding-on-avalanche-using-react",
    "title": "Create an Auction with Bidding on Avalanche using ReactJS",
    "description": "Learn how to make an Auction smart contract on Avalanche",
    "tags": ["Avalanche", "Solidity", "React", "Truffle", "Solidity"],
    "difficulty": "Beginner",
    "id": 36,
    "streamId": "kjzl6cwe1jw149v3p9tqlgwandfglg3rkpi8600kav8wijxwd4rayy3bs9wgqle"
  },
  {
    "slug": "the-journey-of-a-subgraph-query",
    "title": "The Journey of a Subgraph Query",
    "description": "Learn about how subgraph queries are performed and how they travel through the Graph Protocol",
    "tags": [
      "The Graph",
      "GraphQL",
      "Smart contracts",
      "GraphQL",
      "Javascript"
    ],
    "difficulty": "Beginner",
    "id": 37,
    "streamId": "kjzl6cwe1jw1476qpe8njuurvlaifd3s242utwcc8fa4skl29xv1cwcrbyvcbfn"
  },
  {
    "slug": "create-a-fullstack-mail-dapp-on-solana",
    "title": "Create a fullstack mail dApp on Solana",
    "description": "Learn how to build a decentralized mail app on Solana using Rust and React",
    "tags": ["Solana", "Rust", "React", "Rust"],
    "difficulty": "Experienced",
    "id": 38,
    "streamId": "kjzl6cwe1jw149xyje6lmm7l8x6pp7ek35y2fd3ei771fyy9kaktrqnsp6wbjx0"
  },
  {
    "slug": "moola-market",
    "title": "How to use Moolaâ€™s money market",
    "description": "This tutorial is a part of DeFi series where people can learn how to participate in DeFi on the Celo Blockchain.",
    "tags": ["Celo"],
    "difficulty": "Beginner",
    "id": 39,
    "streamId": "kjzl6cwe1jw14891ym2ujdsk75s3r3dyhq5m2sjk76f35a93sahp0uin75t3tdi"
  },
  {
    "slug": "sol-mint-token",
    "title": "Create a token on Solana",
    "description": "Create a token on the Solana blockchain with no coding needed",
    "tags": ["Solana", "Rust", "Rust", "CLI"],
    "difficulty": "Beginner",
    "id": 40,
    "streamId": "kjzl6cwe1jw14b9aif96lks8anlvqt6lkzgovhhfcmglmchrn1eewfvg00oykso"
  },
  {
    "slug": "substrate-kitties-interacting-functions",
    "title": "Substrate Kitties - Interacting with your Kitties",
    "description": "Learn how to add interactivity to your Substrate Kitties",
    "tags": ["Polkadot", "Rust", "Rust"],
    "difficulty": "Beginner",
    "id": 41,
    "streamId": "kjzl6cwe1jw1486kub0wuroj2pbpyn9t297z89aw86kbllnfkcnr7qw2nodn7x1"
  },
  {
    "slug": "query-ethereum-data-with-the-graph",
    "title": "Query Ethereum data with The Graph",
    "description": "Learn how to create a subgraph from a deployed smart contract on Ethereum",
    "tags": ["The Graph", "GraphQL", "GraphQL"],
    "difficulty": "Beginner",
    "id": 42,
    "streamId": "kjzl6cwe1jw146c8rx1f7yiqi8wppdc9ky5dbnxqem1wv6yddvakocdkbygzii3"
  },
  {
    "slug": "chakra-ui-with-solana-dapps",
    "title": "Making a front-end for your Solana dApp with Chakra UI",
    "description": "Create beautiful front-ends for Solana dApps using the Chakra UI library",
    "tags": ["Solana", "JS/TS", "Rust", "Javascript", "Rust"],
    "difficulty": "Beginner",
    "id": 43,
    "streamId": "kjzl6cwe1jw149dxwp2ccfcewjfkl368yylricbvp7gac2jul70oabzht1813t6"
  },
  {
    "slug": "explaining-polygon-and-blockchains",
    "title": "Explaining Polygon and Blockchains",
    "description": "Learning about Polygon with Pizza is fun",
    "tags": ["Polygon"],
    "difficulty": "Beginner",
    "id": 44,
    "streamId": "kjzl6cwe1jw1462cytp6ol3u3ap9w9u3ycnk6963xrfqixbqqpwkyi9oigp179x"
  },
  {
    "slug": "create-nft-smart-contract-with-hardhat",
    "title": "Create an NFT smart contract with HardHat",
    "description": "Learn how to create your own NFT smart contract using HardHat",
    "tags": ["Polygon", "JS/TS", "Solidity", "Solidity", "Hardhat"],
    "difficulty": "Beginner",
    "id": 45,
    "streamId": "kjzl6cwe1jw14bfjo23zijf5u52vj3pt2hlqhnnykbts6x9rz470hkaa03ybqka"
  },
  {
    "slug": "create-an-nft-marketplace-on-tezos",
    "title": "Create an NFT marketplace on Tezos",
    "description": "Learn how to create your own NFT marketplace on Tezos",
    "tags": ["Tezos", "Python", "Smart contracts", "IPFS"],
    "difficulty": "Beginner",
    "id": 46,
    "streamId": "kjzl6cwe1jw14bc7ls7t5a5oga6hlo8pqhraq889ukwnz8zmccxs4ypwokahhzg"
  },
  {
    "slug": "substrate-kitties-create-kitties",
    "title": "Substrate Kitties - Create Kitties",
    "description": "Learn how to add uniqueness to your Substrate Kitties",
    "tags": ["Polkadot", "Rust", "Rust"],
    "difficulty": "Beginner",
    "id": 47,
    "streamId": "kjzl6cwe1jw1489povcxttxr2bncbtvhzksf25rdkr2msm6gpr24pyxgn98bgjn"
  },
  {
    "slug": "deploy-a-subgraph-with-hardhat",
    "title": "Deploy a subgraph with HardHat",
    "description": "Learn how to deploy a subgraph for a smart contract using HardHat.",
    "tags": ["The Graph", "GraphQL", "Solidity", "GraphQL", "Solidity"],
    "difficulty": "Beginner",
    "id": 48,
    "streamId": "kjzl6cwe1jw146m0fwkdbxk3qqbyrnkbdrjfqdyjxypbckillgirl7yexgqg3od"
  },
  {
    "slug": "create-a-chat-application-using-solidity-and-react",
    "title": "Create a chat dApp on Avalanche using Solidity and ReactJS",
    "description": "Learn how to deploy a distributed chat application on Avalanche using Solidity and the React framework",
    "tags": [
      "Avalanche",
      "JS/TS",
      "Solidity",
      "React",
      "NodeJS",
      "Solidity",
      "Remix"
    ],
    "difficulty": "Beginner",
    "id": 49,
    "streamId": "kjzl6cwe1jw145gstn60v5s6l6mzymez3tggfmgwpqlgub1pup3h96gm1h21g97"
  },
  {
    "slug": "create-mint-transfer-nft",
    "title": "Create, Mint and Transfer NFTs with the Avalanche Wallet",
    "description": "Learn how to create, mint, and transfer NFTs on Avalanche.",
    "tags": ["Avalanche", "Smart contracts"],
    "difficulty": "Beginner",
    "id": 50,
    "streamId": "kjzl6cwe1jw146lip60qh8429e8spb1fsg4ebjuo7wyxmuo77ol27xm9a3x6thj"
  },
  {
    "slug": "creating-subgraphs-for-multiple-smart-contracts",
    "title": "Creating subgraphs for multiple smart contracts",
    "description": "Learn how to build a subgraph for a complex dApp that uses multiple smart contracts, like Uniswap",
    "tags": [
      "The Graph",
      "AssemblyScript",
      "GraphQL",
      "AssemblyScript",
      "GraphQL"
    ],
    "difficulty": "Beginner",
    "id": 51,
    "streamId": "kjzl6cwe1jw145doj6x0syefrtzj7308lmabfqvcktbzz8z73zzrkrx79qwy1vw"
  },
  {
    "slug": "deploy-pangolin-to-local-testnet",
    "title": "Deploy Pangolin and a token pair to a local testnet ",
    "description": "Learn about token pairs and the Pangolin Decentralized Exchange",
    "tags": [
      "Avalanche",
      "Solidity",
      "Smart contracts",
      "Javascript",
      "Solidity"
    ],
    "difficulty": "Beginner",
    "id": 52,
    "streamId": "kjzl6cwe1jw147qr174cqoq3t53ejctxfxnhqqqv4j5w886aoct5khhi0t46ts3"
  },
  {
    "slug": "using-hardhat-with-the-avalanche-c-chain",
    "title": "Using Hardhat with the Avalanche C-Chain",
    "description": "Learn how to use Hardhat with the Avalanche C-Chain",
    "tags": [
      "Avalanche",
      "Go",
      "JS/TS",
      "Solidity",
      "NodeJS",
      "Smart contracts",
      "Avash",
      "Waffle",
      "Hardhat"
    ],
    "difficulty": "Beginner",
    "id": 53,
    "streamId": "kjzl6cwe1jw148h4iphpv63o2g2qvzu55f5arsexbj0damtibirpwd27ktokf56"
  },
  {
    "slug": "create-a-polymarket-clone-on-polygon",
    "title": "How to create a Polymarket clone on Polygon",
    "description": "Learn how to make your own Polymarket clone",
    "tags": ["Polygon", "JS/TS", "Truffle", "IPFS", "Typescript"],
    "difficulty": "Beginner",
    "id": 54,
    "streamId": "kjzl6cwe1jw148kuumh9mphaxp372xzoxq11bujzqtfm8vrjeheilugtk8dz0yn"
  },
  {
    "slug": "making-evoting-dapp-on-avalanche-c-chain-using-truffle",
    "title": "Make an e-Voting dApp on Avalanche Fuji testnet",
    "description": "Learn how to use Truffle with the Avalanche C-Chain",
    "tags": [
      "Avalanche",
      "JS/TS",
      "Solidity",
      "NodeJS",
      "Truffle",
      "Solidity",
      "Metamask"
    ],
    "difficulty": "Beginner",
    "id": 55,
    "streamId": "kjzl6cwe1jw14bgqfe2bo40wdg2z21qedr1aruw42ez07knfwjpicajebmsiozk"
  },
  {
    "slug": "create-a-new-virtual-machine",
    "title": "Create a New Virtual Machine",
    "description": "Learn how to create a new virtual machine on Avalanche",
    "tags": ["Avalanche", "Go", "CLI"],
    "difficulty": "Beginner",
    "id": 56,
    "streamId": "kjzl6cwe1jw14bavdihiun3k0446pjf7atmpn258twxb7yuncupr3fhfitfoz8w"
  },
  {
    "slug": "implement-social-recovery-on-polkadot",
    "title": "Implement Social Recovery on Polkadot",
    "description": "In this tutorial we will cover how to set up and utilize social recovery for a Polkadot proxy account",
    "tags": ["Polkadot", "JS/TS", "NodeJS"],
    "difficulty": "Beginner",
    "id": 57,
    "streamId": "kjzl6cwe1jw147iewfb3x8s6bzxth2h4mx6jvcvq92h4kdtu96qhk14actdglp2"
  },
  {
    "slug": "advanced-evoting-avalanche-reactjs",
    "title": "Create a Voting dApp on Avalanche using ReactJS",
    "description": "Learn how to create an Avalanche based dApp with a ReactJS frontend",
    "tags": [
      "Avalanche",
      "JS/TS",
      "Solidity",
      "React",
      "NodeJS",
      "Truffle",
      "Solidity"
    ],
    "difficulty": "Beginner",
    "id": 58,
    "streamId": "kjzl6cwe1jw14aotmmtpjg7evzuz4bahv4krytc2uukgxev5u37d1cvb3ryi5l4"
  },
  {
    "slug": "create-vault-smart-contract",
    "title": "Create Vault Smart Contract",
    "description": "Learn how to create, deploy, and interact with Vault Smart Contract on the Celo Ecosystem",
    "tags": [
      "Celo",
      "JS/TS",
      "Solidity",
      "React",
      "NodeJS",
      "Smart contracts",
      "Truffle"
    ],
    "difficulty": "Experienced",
    "id": 59,
    "streamId": "kjzl6cwe1jw149g7tqaekpli4gkpaqwip55emtmkq9xcjvyhistbnv39o08x1pl"
  },
  {
    "slug": "using-the-smartpy-ide-to-deploy-tezos-smart-contracts",
    "title": "Using the SmartPy IDE to write and deploy smart contracts on Tezos",
    "description": "Learn how to write, deploy & interact with a smart contract on Tezos, using SmartPy.",
    "tags": ["Tezos", "Python", "Smart contracts"],
    "difficulty": "Beginner",
    "id": 60,
    "streamId": "kjzl6cwe1jw14bl0wf1h3mrbhs7k85j9cpktfrekkw3yrshzcbwt4z4l62u54sx"
  },
  {
    "slug": "create-a-todo-dapp-with-flutter",
    "title": "Create a To-Do dApp with Flutter",
    "description": "Learn how to create a universal To-Do dApp with the Flutter framework and deploy it on Polygon.",
    "tags": ["Polygon", "JS/TS", "Solidity", "Truffle", "Solidity"],
    "difficulty": "Beginner",
    "id": 61,
    "streamId": "kjzl6cwe1jw14bhvgfeyq48hg5fouiy7hxzko465er09vw3b60b4xcechtf3mpc"
  },
  {
    "slug": "write-a-pallet-in-its-own-crate",
    "title": "Write a Pallet in its Own Crate",
    "description": "Learn how to write a Substrate pallet that lives in its own crate, and include it in a node based on the substrate-node-template",
    "tags": ["Polkadot", "Rust", "AssemblyScript"],
    "difficulty": "Beginner",
    "id": 62,
    "streamId": "kjzl6cwe1jw1484g2hqyunhc4poztp0130flhmm2yey62z14nccmq2q9zkkudps"
  },
  {
    "slug": "create-your-first-substrate-chain",
    "title": "Create Your First Substrate Chain",
    "description": "Learn how to compile and launch the Substrate Developer Hub Node Template and interact with it using the Substrate Developer Hub Front-End Template.",
    "tags": ["Polkadot", "JS/TS", "Rust", "NodeJS"],
    "difficulty": "Beginner",
    "id": 63,
    "streamId": "kjzl6cwe1jw14a0s0bxhdq254uwg0jkwel8ooh7cj2dltzqh39pvqmhci47x1iz"
  },
  {
    "slug": "peer-to-peer-payment-on-polygon-part-1",
    "title": "Create a Peer to Peer payment dApp, Part 1",
    "description": "Part one of a two-part tutorial that explains how to create a P2P payment dApp on Polygon",
    "tags": ["Polygon", "JS/TS", "Javascript", "Metamask", "Next.js"],
    "difficulty": "Beginner",
    "id": 64,
    "streamId": "kjzl6cwe1jw1472l093fg4w93nko0ym8fltqr92p0aquq4vfcvdhe8b5vnj5w2y"
  },
  {
    "slug": "add-viewing-keys-to-secret-contract",
    "title": "Adding viewing keys to a secret contract",
    "description": "Add Viewing Key code to the reminder secret contract that we built in the \"Developing your first secret contract\" tutorial.",
    "tags": ["Secret", "Rust", "Smart contracts", "Rust"],
    "difficulty": "Beginner",
    "id": 65,
    "streamId": "kjzl6cwe1jw145krijtuc40eupj5bn040ak2mb99yld6l5kt0rd1mg4r9dzfulc"
  },
  {
    "slug": "distributed-file-manager-using-ipfs-celo-reactjs",
    "title": "Distributed File Manager (DFM) using Celo, IPFS and ReactJS",
    "description": "Learn how to make a Distributed File Manager using the IPFS protocol for storing files on the Celo network",
    "tags": [
      "Celo",
      "JS/TS",
      "Solidity",
      "React",
      "NodeJS",
      "Smart contracts",
      "Truffle",
      "Solidity",
      "IPFS"
    ],
    "difficulty": "Beginner",
    "id": 66,
    "streamId": "kjzl6cwe1jw145ocgrdhzohtwv5s3h87cxjemwu60fqrdif4aeesy28e8tql8c7"
  },
  {
    "slug": "build-a-social-media-dapp-and-deploy-it-on-polygon",
    "title": "Build a Social Media dApp & Deploy it on Polygon",
    "description": "Learn how to build a Social Media dApp like YouTube & how to deploy it on the Polygon mumbai testnet",
    "tags": [
      "Polygon",
      "JS/TS",
      "Solidity",
      "React",
      "Smart contracts",
      "Solidity",
      "IPFS"
    ],
    "difficulty": "Beginner",
    "id": 67,
    "streamId": "kjzl6cwe1jw1491f5yke0lnfhyy0guk01q5872irfkm142qhv10n54bj60hlcxu"
  },
  {
    "slug": "peer-to-peer-payment-on-polygon-part-2",
    "title": "Create a Peer to Peer payment dApp, Part 2",
    "description": "Part two of a two-part tutorial that explains how to create a P2P payment dApp on Polygon",
    "tags": ["Polygon", "JS/TS", "Javascript", "Next.js"],
    "difficulty": "Beginner",
    "id": 68,
    "streamId": "kjzl6cwe1jw1480w7h8or3eluwnr2qwq1opn8tu49ntifzghyhr1s1teylch2aj"
  },
  {
    "slug": "pay-to-play-gaming-on-solana",
    "title": "Build a pay-to-play gaming platform on Solana",
    "description": "Discover how to make your own pay-to-play game platform on Solana",
    "tags": ["Solana", "JS/TS", "Javascript", "IPFS", "Arweave"],
    "difficulty": "Beginner",
    "id": 69,
    "streamId": "kjzl6cwe1jw147hcnvne3obvnzu8himatu0w4spxb9ugz77ru1l7awbswiho5ps"
  },
  {
    "slug": "create-a-dex-on-tezos",
    "title": "Create a DEX on Tezos",
    "description": "Learn how to make your own Decentralized Exchange",
    "tags": ["Tezos", "Python", "React", "Smart contracts"],
    "difficulty": "Beginner",
    "id": 70,
    "streamId": "kjzl6cwe1jw146h6tde0dkgszrrpcyhmxkjc3m5gbsbbrp8f012g9jqxvqiuu6x"
  },
  {
    "slug": "creating-a-variable-cap-asset",
    "title": "Creating A Variable-Cap Asset",
    "description": "Learn how to create a variable-cap asset on Avalanche",
    "tags": ["Avalanche", "Javascript", "CLI"],
    "difficulty": "Beginner",
    "id": 71,
    "streamId": "kjzl6cwe1jw148yx9q8f8sg9btgivp444ub0myucuzuprvr0kv15rwzqrvjc229"
  },
  {
    "slug": "deploying-and-debugging-smart-contracts-on-polygon",
    "title": "Deploying and Debugging Smart Contracts on Polygon",
    "description": "Learn how to deploy smart contracts to the Polygon Mumbai testnet and how to debug them",
    "tags": ["Polygon", "Solidity", "Smart contracts", "Truffle", "Solidity"],
    "difficulty": "Beginner",
    "id": 72,
    "streamId": "kjzl6cwe1jw1498b7ughlwe7pnvdj4famfka86w130minpnk9srbukt9v08ioca"
  },
  {
    "slug": "how-to-successfully-connect-to-a-celo-wallet-with-a-react-native-dapp",
    "title": "How to successfully connect to a Celo Wallet with a React Native DApp",
    "description": "Learn how to successfully set up a Celo Wallet with a React Native DApp using Redux",
    "tags": ["Celo", "JS/TS", "React Native", "NodeJS"],
    "difficulty": "Beginner",
    "id": 73,
    "streamId": "kjzl6cwe1jw146uxjq2ecc4nb6itbxmdint7qffmcyvfs3dwlt6ftqw6zmst4i5"
  },
  {
    "slug": "create-a-decentralized-exchange-on-avalanche",
    "title": "Create a Decentralized Exchange (DEX) on Avalanche",
    "description": "Learn how to create a decentralized exchange on Avalanche.",
    "tags": [
      "Avalanche",
      "JS/TS",
      "Solidity",
      "React",
      "Smart contracts",
      "Solidity"
    ],
    "difficulty": "Beginner",
    "id": 74,
    "streamId": "kjzl6cwe1jw145qcdwymg1uguyv0cpl0ch0tmzbdbcndv230zvuhngrpk5o2s0p"
  },
  {
    "slug": "deploy-a-subgraph-for-polygon",
    "title": "Deploy a subgraph for a Polygon smart contract",
    "description": "Learn how to deploy a Solidity smart contract to Polygon Mumbai testnet using HardHat, then create and deploy its subgraph to the Subgraph Studio",
    "tags": [
      "The Graph",
      "JS/TS",
      "Solidity",
      "Javascript",
      "Solidity",
      "Hardhat"
    ],
    "difficulty": "Beginner",
    "id": 75,
    "streamId": "kjzl6cwe1jw14b1cq6doku44ij1fv6yzxgrci6o3m4pjuege94vcy2ya04o0fd2"
  },
  {
    "slug": "funding-dao-polygon",
    "title": "Build a Funding DAO on Polygon",
    "description": "Create a Funding DAO, where people can use MATIC tokens to become either a Member or Stakeholder in the DAO and fund proposals they vote on.",
    "tags": [
      "Polygon",
      "JS/TS",
      "Truffle",
      "Solidity",
      "Arweave",
      "Typescript"
    ],
    "difficulty": "Beginner",
    "id": 76,
    "streamId": "kjzl6cwe1jw1472410rxj53lz1cbopkgrgn86mirwk3rk5ku0xnxtj5iveylodi"
  },
  {
    "slug": "build-a-scavenger-game",
    "title": "Build a scavenger game",
    "description": "Learn how to build a scavenger game using the Cosmos SDK",
    "tags": ["Cosmos", "Go", "CLI"],
    "difficulty": "Experienced",
    "id": 77,
    "streamId": "kjzl6cwe1jw14aey5xhkjxkpi6maafq0g7it4hp73dzh25h5ex1a8raqnd2j3ef"
  },
  {
    "slug": "mint-nfts-on-tezos",
    "title": "Mint NFTs on Tezos ",
    "description": "Learn how to mint NFTs on Tezos using SmartPy & BetterCall.dev",
    "tags": ["Tezos", "Python", "Smart contracts"],
    "difficulty": "Beginner",
    "id": 78,
    "streamId": "kjzl6cwe1jw148wqwujh6qp82gu42adg0nh4xijltwrhpqaqkpcec59z9nljf83"
  },
  {
    "slug": "celo-hardhat-deploy-and-nft-app",
    "title": "How to create a ERC1155 NFT in Celo Network with Hardhat",
    "description": "Learn how to write a smart contract using the Solidity language and a contract from the Openzeppelin library for ERC1155 tokens",
    "tags": [
      "Celo",
      "JS/TS",
      "Solidity",
      "React",
      "NodeJS",
      "Smart contracts",
      "Javascript",
      "Hardhat"
    ],
    "difficulty": "Beginner",
    "id": 79,
    "streamId": "kjzl6cwe1jw14b0z3d7za9yu2bk38d1sbxdvm4jph5vw0k5lgt306sfouoyzdn9"
  },
  {
    "slug": "celo-subgraphs",
    "title": "Create subgraphs for Celo smart contracts",
    "description": "Learn how to integrate The Graph with CELO",
    "tags": [
      "Celo",
      "GraphQL",
      "Solidity",
      "NodeJS",
      "Smart contracts",
      "Truffle",
      "Solidity"
    ],
    "difficulty": "Beginner",
    "id": 80,
    "streamId": "kjzl6cwe1jw147tysszet7a88hidsp2lq4whj7i0vb6qp19ai814umdl6hoiw8a"
  },
  {
    "slug": "build-polkadot-amm-using-ink",
    "title": "Build an AMM on Polkadot using Ink!",
    "description": "Learn how to build an Automated Market Maker on Polkadot using the ink! eDSL",
    "tags": ["Polkadot", "Rust", "Rust"],
    "difficulty": "Beginner",
    "id": 81,
    "streamId": "kjzl6cwe1jw147koknltf66yknogqk310duovuqwjye9se6ocynzwtdnsa0k4s2"
  },
  {
    "slug": "build-a-dao-on-celo",
    "title": "Build a Decentralized Autonomous Organization (DAO) on Celo",
    "description": "Build a functioning DAO by writing the Solidity smart contract and building a React Native dApp",
    "tags": ["Celo", "JS/TS", "Solidity", "React Native", "NodeJS", "Truffle"],
    "difficulty": "Experienced",
    "id": 82,
    "streamId": "kjzl6cwe1jw14bip9jurw8y3pvivkc6et831qr92w7ry1luuv6yc8bymzrnh18k"
  },
  {
    "slug": "create-a-simple-blog-dapp-on-solana",
    "title": "Create a simple blog dApp on Solana",
    "description": "Learn how to create a simple blog dApp on Solana using Rust and React",
    "tags": ["Solana", "JS/TS", "Rust", "React", "Rust"],
    "difficulty": "Beginner",
    "id": 83,
    "streamId": "kjzl6cwe1jw14647gr3k53gxfc7f5afss6ie7cgmstl8t6qprbuo248su740qid"
  },
  {
    "slug": "introduction-to-dappkit",
    "title": "Introduction to dApp kit",
    "description": "In this tutorial we are going to make counter dapp with expo (react native)",
    "tags": ["Celo", "JS/TS", "React Native", "NodeJS", "Truffle"],
    "difficulty": "Beginner",
    "id": 84,
    "streamId": "kjzl6cwe1jw1483wgl5b4ghgrggxnvo8iua27zj0x9ajcwfr1e6x3ksassdbnc8"
  },
  {
    "slug": "write-and-deploy-a-smart-contract-on-near",
    "title": "How to write and deploy a smart contract in Rust",
    "description": "In this tutorial, we are going to write and test a smart contract using Rust",
    "tags": [
      "Near",
      "Rust",
      "NodeJS",
      "Smart contracts",
      "AssemblyScript",
      "CLI"
    ],
    "difficulty": "Beginner",
    "id": 85,
    "streamId": "kjzl6cwe1jw1471oxnbvvhakw1ce62hqx1al9pq2ooeaicd8chu7y53m269wztb"
  },
  {
    "slug": "uniswap-latest-pair",
    "title": "Scan the latest pairs added on UniswapV3 using TheGraph",
    "description": "Scan the latest pairs added on UniswapV3 using TheGraph in Google Sheets",
    "tags": ["The Graph", "JS/TS", "GraphQL", "Javascript"],
    "difficulty": "Beginner",
    "id": 87,
    "streamId": "kjzl6cwe1jw147gmubcpb350lk83w03z0tr9qda0fb057zem2u4ui47hr97io3s"
  },
  {
    "slug": "deploy-your-own-secret-nft",
    "title": "Deploy your own secret NFT",
    "description": "This is the second part of a series about using snip721 tokens on the Secret network.",
    "tags": ["Secret", "JS/TS", "Rust", "NodeJS"],
    "difficulty": "Beginner",
    "id": 88,
    "streamId": "kjzl6cwe1jw14b0857pg38qq0k0ehicdfxluof9lf1wl2b1f0wfesxvk5zagqex"
  },
  {
    "slug": "stake-account-storage",
    "title": "Show me the Code: STAKE Account Storage NEP-145 Rust Implementation",
    "description": "STAKE Account Storage NEP-145 Rust Implementation",
    "tags": ["Near", "Rust", "Smart contracts"],
    "difficulty": "Beginner",
    "id": 89,
    "streamId": "kjzl6cwe1jw1463dxvbdoyxw4zpgda7h3yp13qcbt4an60fd9k1unnofie2o5jk"
  },
  {
    "slug": "polkadot-blockchain-terms",
    "title": "Polkadot Blockchain Terms",
    "description": "Learn the basics of Polkadot blockchain",
    "tags": ["Polkadot"],
    "difficulty": "Beginner",
    "id": 90,
    "streamId": "kjzl6cwe1jw14armzhfi2p8062wda25eq3ypy2eaq6y8p9qy52qg7bx0ryg6xgt"
  },
  {
    "slug": "near-cross-contract-calls",
    "title": "Near cross-contract calls",
    "description": "Learn how to write smart contracts that talk to each other",
    "tags": [
      "Near",
      "JS/TS",
      "Rust",
      "NodeJS",
      "Smart contracts",
      "Javascript"
    ],
    "difficulty": "Beginner",
    "id": 91,
    "streamId": "kjzl6cwe1jw146yljfqblc7hvl98kpt7r0j5wsh0brohfbx31gq3i13mmn3oqb3"
  },
  {
    "slug": "celo-contract-from-ethereum",
    "title": "How to customize an Ethereum smart contract for the Celo network",
    "description": "Learn how to convert & customize an existing Ethereum Smart Contract for Celo network",
    "tags": [
      "Celo",
      "JS/TS",
      "Solidity",
      "NodeJS",
      "Smart contracts",
      "Truffle"
    ],
    "difficulty": "Beginner",
    "id": 92,
    "streamId": "kjzl6cwe1jw146qrnyxwhhzfuw7yp4lmeshq0yckqyn9pg54upjo91mcuxixwo2"
  },
  {
    "slug": "how-to-run-a-celo-full-node-in-a-virtual-machine",
    "title": "Run a Celo full node in a Virtual Machine",
    "description": "Learn how to setup & run a Celo full node in a Virtual Machine",
    "tags": ["Celo", "JS/TS", "NodeJS"],
    "difficulty": "Beginner",
    "id": 93,
    "streamId": "kjzl6cwe1jw149sto04x13k7c2e1xrfabi5sgur0m4pztons1xvwmvgly8k5y2z"
  },
  {
    "slug": "celo-testing-truffle",
    "title": "Testing Celo Smart Contracts with Truffle",
    "description": "We will learn how to use Truffle in order to test smart contracts on Celo",
    "tags": [
      "Celo",
      "JS/TS",
      "Solidity",
      "NodeJS",
      "Smart contracts",
      "Truffle",
      "Javascript"
    ],
    "difficulty": "Beginner",
    "id": 94,
    "streamId": "kjzl6cwe1jw1490c3ed9uafb5nhbeskylorwm27ch4egxy7lfuqyhkxtji6uv7r"
  },
  {
    "slug": "build-a-nameservice-app",
    "title": "Build a nameservice application",
    "description": "Learn how to build a nameservice application with the Cosmos SDK",
    "tags": ["Cosmos", "Go", "CLI"],
    "difficulty": "Experienced",
    "id": 95,
    "streamId": "kjzl6cwe1jw146m189k70sls6xrp7xpp8v2sa7e3ddsurvwgxtj88t3092q9vf0"
  },
  {
    "slug": "local-avalanche-network-using-avash",
    "title": "Setting up a local Avalanche network using Avash",
    "description": "Learn how to setup and run a local Avalanche network using Avash",
    "tags": ["Avalanche", "Go", "JS/TS", "Javascript", "CLI", "Avash"],
    "difficulty": "Beginner",
    "id": 96,
    "streamId": "kjzl6cwe1jw14bax0fawcjqmgybnbkyzuvrywmljioi5kxgj71gx14uloh2ozk5"
  },
  {
    "slug": "celo-for-remix",
    "title": "Deploy Celo Smart contracts with Remix IDE",
    "description": "Learn how to use Remix IDE for deploying Celo smart contracts",
    "tags": [
      "Celo",
      "Solidity",
      "Smart contracts",
      "Solidity",
      "Metamask",
      "Remix"
    ],
    "difficulty": "Beginner",
    "id": 97,
    "streamId": "kjzl6cwe1jw14626mzvl5nzsyrnjslqltpf3ri1ahuywn97vowze8gvx9dvfu3f"
  },
  {
    "slug": "redeploy-ethereum-dapps-on-celo",
    "title": "How to re-deploy your Ethereum DApp to Celo",
    "description": "Learn how to re-deploy Ethereum Dapps on the Celo network",
    "tags": ["Celo", "JS/TS", "Truffle", "Javascript", "CLI"],
    "difficulty": "Beginner",
    "id": 98,
    "streamId": "kjzl6cwe1jw14b0nygw3ca7iq1l3v2djek0lcl7iyo7t1202aa1uu81r5q67zct"
  },
  {
    "slug": "parachain-lifecycle",
    "title": "Parachain Lifecycle",
    "description": "This guide will focus on the lifecycle of Polkadot's parachains, an integral part of the Polkadot ecosystem.",
    "tags": ["Polkadot"],
    "difficulty": "Beginner",
    "id": 99,
    "streamId": "kjzl6cwe1jw14bm4fq0t9jzqffjgu5n8a8ugt6th7icrfwq6e6v8di8thf9tc79"
  },
  {
    "slug": "create-a-local-test-network",
    "title": "Create a Local Test Network",
    "description": "Learn how to create a local test network on Avalanche",
    "tags": ["Avalanche", "Go", "CLI", "Avash"],
    "difficulty": "Beginner",
    "id": 100,
    "streamId": "kjzl6cwe1jw149jyd1vdtjdmg4n46jqzbkmkdvdv5y8jasxvhivg95kvm269h7f"
  },
  {
    "slug": "deploy-pangolin-to-your-local-testnet-and-create-token-pair",
    "title": "Deploy Pangolin To Your Local Testnet And Create Token Pair",
    "description": "We will learn how to deploy Pangolin, a DEX which lives on C-Chain, to your local Avalanche testnet.",
    "tags": ["Avalanche", "Go", "JS/TS", "NodeJS"],
    "difficulty": "Beginner",
    "id": 101,
    "streamId": "kjzl6cwe1jw149ec3akjv2kmp0wi4y28dvsx8g4ym4vfdmxsggwrk2p5825m6b6"
  },
  {
    "slug": "create-a-new-blockchain",
    "title": "Create a New Blockchain",
    "description": "Learn how to create a new Blockchain on Avalanche",
    "tags": ["Avalanche", "JS/TS", "Javascript", "CLI"],
    "difficulty": "Beginner",
    "id": 103,
    "streamId": "kjzl6cwe1jw14973umxl0jrqmnly9gkiyivdj2n8bhwko5d3lmr131mmsuaupw5"
  },
  {
    "slug": "creating-a-fixed-cap-asset",
    "title": "Creating A Fixed-Cap Asset",
    "description": "Learn how to create a fixed-cap asset on Avalanche",
    "tags": ["Avalanche", "JS/TS", "Javascript", "CLI"],
    "difficulty": "Beginner",
    "id": 104,
    "streamId": "kjzl6cwe1jw148jvlup3r0pvazd1i6oafz2zuk33u5w54r831u5z29gx3ph1g7o"
  },
  {
    "slug": "deploying-smart-contracts-on-celo-with-truffle",
    "title": "Deploying smart contracts on Celo with Truffle",
    "description": "We will learn how to use Truffle and ContractKit to deploy smart contracts to Celo.",
    "tags": ["Celo", "JS/TS", "NodeJS", "Smart contracts", "Truffle"],
    "difficulty": "Beginner",
    "id": 105,
    "streamId": "kjzl6cwe1jw14aw6jwa599id8bjl3qw7e8tp1fiss14mjpzrzf9vwaz235x1zkr"
  },
  {
    "slug": "using-truffle-with-the-avalanche-c-chain",
    "title": "Using Truffle with the Avalanche C-Chain",
    "description": "Learn how to use Truffle with the C-Chain",
    "tags": ["Avalanche", "JS/TS", "NodeJS", "Truffle", "Avash"],
    "difficulty": "Beginner",
    "id": 106,
    "streamId": "kjzl6cwe1jw147cwg4ssfu19eb1tprks70ikb1bp4gfb4j25pyx4ayu8revxojy"
  },
  {
    "slug": "query-nft-data-with-subgraphs",
    "title": "Query NFT Data with OpenZeppelin Subgraphs",
    "description": "Learn how to create, deploy and use a subgraph for an ERC-721 smart contract on Ethereum mainnet",
    "tags": ["The Graph", "GraphQL", "Smart contracts", "GraphQL"],
    "difficulty": "Beginner",
    "id": 107,
    "streamId": "kjzl6cwe1jw147nnnijqek8mtn278s27mgnsu0fx7yiygi7lhumsx8txyi2k2ii"
  },
  {
    "slug": "create-a-transaction-search-widget",
    "title": "Create a transaction search widget",
    "description": "Learn how to create a simple transaction search widget using Figment's Transaction Search API and DataHub",
    "tags": ["Cosmos", "JS/TS", "Javascript"],
    "difficulty": "Beginner",
    "id": 108,
    "streamId": "kjzl6cwe1jw14b1gvressdb1ou9z7vhon5ss0aeea3mh4ju8ovovfo6ugtogpe2"
  },
  {
    "slug": "create-your-first-secret-nft",
    "title": "Create your first secret NFT",
    "description": "This is the first part of a series about using snip721 tokens on the Secret network.",
    "tags": ["Secret", "JS/TS", "NodeJS", "Smart contracts"],
    "difficulty": "Beginner",
    "id": 109,
    "streamId": "kjzl6cwe1jw146959bib1sn5v1p90avt6k5re90vjrqonrrlt7n5f4stnr1e6xm"
  },
  {
    "slug": "generative-nfts-on-solana-with-candy-machine-v2-and-hashlips",
    "title": "Build unique generative NFTs on Solana with Candy Machine v2 and Hashlips Engine",
    "description": "Learn how to create a collection of unique NFTs on Solana",
    "tags": ["Solana", "JS/TS", "Javascript"],
    "difficulty": "Beginner",
    "id": 110,
    "streamId": "kjzl6cwe1jw148s2ngapv8vut3a3rchfr356w0x30kyff2n5qs3bpfmf063w9fj"
  },
  {
    "slug": "celo-erc20-token-on-remix",
    "title": "How to mint your own fungible token on Celo",
    "description": "How to create fungible tokens on Celo using the Remix IDE",
    "tags": ["Celo", "Solidity", "Solidity", "Metamask", "Remix"],
    "difficulty": "Beginner",
    "id": 111,
    "streamId": "kjzl6cwe1jw146xq2wvohlkqrchc3lw28ttpk5i620cbazchoanqio1kk9i4lu8"
  },
  {
    "slug": "connect-datahub-to-metamask",
    "title": "Connect DataHub to Metamask",
    "description": "Learn how to leverage Avalanche DataHub for Metamask transactions",
    "tags": ["Avalanche"],
    "difficulty": "Beginner",
    "id": 112,
    "streamId": "kjzl6cwe1jw14bg5ls265ie8n1zl4byq9wnz65omq2kkd4bpfcwbxdwnv5zb9vl"
  },
  {
    "slug": "make-a-solana-explorer-clone-using-react",
    "title": "Make a Solana Explorer clone using React",
    "description": "Learn how to build a clone of the Solana Explorer to display information about blocks and transactions using React",
    "tags": ["Solana", "JS/TS", "React", "Javascript"],
    "difficulty": "Beginner",
    "id": 113,
    "streamId": "kjzl6cwe1jw14b4x9lyxus7bvg866cqxsqsjw6kg15hnbzpsx9zrctecrvwv6ix"
  },
  {
    "slug": "delegate-and-unbond-tokens",
    "title": "Delegate to a Validator & Unbond Tokens",
    "description": "Learn how to delegate and unbond tokens on Secret Network",
    "tags": ["Secret", "JS/TS", "NodeJS"],
    "difficulty": "Beginner",
    "id": 114,
    "streamId": "kjzl6cwe1jw145jroc8a3lr3ipl79i0dmcssxn10bouarks5vu4p1c60mvifcyw"
  },
  {
    "slug": "build-a-blog-dapp-using-anchor",
    "title": "Build a blog dApp using the Anchor framework",
    "description": "Learn how to create and deploy a blogging dApp on Solana using the Anchor framework",
    "tags": ["Solana", "Rust", "Smart contracts", "Rust"],
    "difficulty": "Experienced",
    "id": 115,
    "streamId": "kjzl6cwe1jw149zp0e8ovh15vm3labgbhi3jscie52m88wd95ombbz36sab7fvz"
  },
  {
    "slug": "avalanche-on-chain-nft-game",
    "title": "How to create an on-chain NFT game",
    "description": "Discover how to create your own NFT game using Avalanche",
    "tags": ["Avalanche"],
    "difficulty": "Beginner",
    "id": 116,
    "streamId": "kjzl6cwe1jw14bexw1npief3y1xhpl96oy1fn5ufa5y0cfrf4fiasm4f1tkwqok"
  },
  {
    "slug": "create-a-subnet",
    "title": "Create a Subnet",
    "description": "Learn how to create a Subnet on Avalanche",
    "tags": ["Avalanche", "JS/TS", "Javascript", "CLI"],
    "difficulty": "Beginner",
    "id": 117,
    "streamId": "kjzl6cwe1jw147jbiwkj2k67769zh0ygly7p1rxle24gwj48hvzjn5uks9aorjw"
  },
  {
    "slug": "transfer-avax-between-the-x-chain-and-p-chain",
    "title": "Transfer AVAX between the X-Chain and P-Chain",
    "description": "Learn how to transfer AVAX between chains",
    "tags": ["Avalanche", "JS/TS", "Javascript", "CLI"],
    "difficulty": "Beginner",
    "id": 118,
    "streamId": "kjzl6cwe1jw149uurwpdlpz21pmv1xkihlg5zqhdz1s85ncq4uhv3npmk1pmjh6"
  },
  {
    "slug": "creating-an-nft-part-1",
    "title": "Creating An NFT - Part 1",
    "description": "Learn how to create an NFT on Avalanche",
    "tags": ["Avalanche", "Go", "JS/TS", "CLI"],
    "difficulty": "Beginner",
    "id": 119,
    "streamId": "kjzl6cwe1jw145q2ctupwv1hffdxy1ryxiebtkl1u9fa6onlu8i62641wy054ld"
  },
  {
    "slug": "how-to-build-custom-pallets-with-substrate",
    "title": "How to build Custom Pallets with Substrate",
    "description": "Learn how to build a custom pallet using the Substrate development framework",
    "tags": ["Polkadot", "Rust", "Rust"],
    "difficulty": "Beginner",
    "id": 120,
    "streamId": "kjzl6cwe1jw147txi7qozbqfg8nyu07kpixd1hm4qudsrd1ftfobsrqole486y6"
  },
  {
    "slug": "add-a-pallet-to-your-runtime",
    "title": "Add A Pallet To Your Runtime",
    "description": "Learn how to add a pallet to your runtime",
    "tags": ["Polkadot", "Rust", "CLI"],
    "difficulty": "Beginner",
    "id": 121,
    "streamId": "kjzl6cwe1jw146ccadpxkn853w8v6szwclnnm58shmjah6huyws7gr1kha4sl4y"
  },
  {
    "slug": "create-nfts-with-the-avalanche-wallet",
    "title": "Create NFTs with the Avalanche Wallet",
    "description": "Learn how to create NFTs with the Avalanche Wallet",
    "tags": ["Avalanche", "Smart contracts"],
    "difficulty": "Beginner",
    "id": 122,
    "streamId": "kjzl6cwe1jw14b3llprevrmg5w9jgeeu10m64sgb3gcji465g96wjd3tc01qe3o"
  },
  {
    "slug": "create-a-blogging-dapp-on-polygon",
    "title": "Create a blogging dApp on Polygon",
    "description": "Learn how to create and deploy a blogging dApp on Polygon",
    "tags": ["Polygon", "JS/TS", "Solidity", "Javascript", "Solidity"],
    "difficulty": "Beginner",
    "id": 123,
    "streamId": "kjzl6cwe1jw149kd5gfmdoa9xte42vlve7hx16k494v28dckh2bb48qtlnzdj75"
  },
  {
    "slug": "hello-contracts",
    "title": "Deploy and Interact with Contracts (Remotely)",
    "description": "Learn how to deploy your own smart contracts on the Celo network",
    "tags": [
      "Celo",
      "JS/TS",
      "Solidity",
      "NodeJS",
      "Smart contracts",
      "Truffle"
    ],
    "difficulty": "Beginner",
    "id": 124,
    "streamId": "kjzl6cwe1jw147u1v9e78tvw88w0q8ifj9z29qvtv9oxyuax5lfxxai6x56ww0d"
  },
  {
    "slug": "integrating-transaction-search-in-your-terra-wallet",
    "title": "Create a transaction search widget",
    "description": "Learn how to create a simple transaction search widget using Figment's Transaction Search API and DataHub",
    "tags": ["Terra", "JS/TS", "Javascript"],
    "difficulty": "Beginner",
    "id": 125,
    "streamId": "kjzl6cwe1jw14b9qox7gjdy7bvyxdkbc9aq58i186a7ha1qn6x1mdiimh4mg276"
  },
  {
    "slug": "launch-a-full-stack-dapp-on-polygon",
    "title": "Build a decentralized AirBnB on Polygon (Matic)",
    "description": "Learn to build a full-stack dApp deployed on Polygon (Matic) with Proof of Stake Security.",
    "tags": [
      "Polygon",
      "JS/TS",
      "Solidity",
      "NodeJS",
      "Smart contracts",
      "Solidity",
      "Remix"
    ],
    "difficulty": "Beginner",
    "id": 126,
    "streamId": "kjzl6cwe1jw1461o9kmb6ggpzhx8rd2uib4wp5vtc9gv6dn9at9xy0jsdlgvjyc"
  },
  {
    "slug": "hello-mobile-dapp",
    "title": "Hello Mobile DApp",
    "description": "Learn how to create a simple mobile DApp using dAppKit and the React Native Expo framework",
    "tags": ["Celo", "Solidity", "NodeJS", "Smart contracts", "Truffle", "CLI"],
    "difficulty": "Beginner",
    "id": 127,
    "streamId": "kjzl6cwe1jw149z1qnua9nn5hpd5469gwhd239l8iuzvrzrokwquc9ykjusy2lv"
  },
  {
    "slug": "deploy-a-smart-contract-on-avalanche-using-remix-and-metamask",
    "title": "Deploy a Smart Contract on Avalanche using Remix and MetaMask",
    "description": "Learn how to deploy and test a smart contract on Avalanche using Remix and MetaMask",
    "tags": ["Avalanche", "Solidity", "Solidity", "Metamask", "Remix"],
    "difficulty": "Beginner",
    "id": 128,
    "streamId": "kjzl6cwe1jw14benn018b6fmaid1g3zuqpwa92wwvrm5onz5lvm7ictge2qhywz"
  },
  {
    "slug": "send-celo-and-cusd",
    "title": "Send CELO & cUSD",
    "description": "Learn how to connect to the Celo test network and transfer tokens using ContractKit",
    "tags": ["Celo", "JS/TS", "NodeJS"],
    "difficulty": "Beginner",
    "id": 129,
    "streamId": "kjzl6cwe1jw146irmxsvwepklew6v9s5h5vk00tcaqvzwh789fo8d77vwqq66ua"
  },
  {
    "slug": "transfer-erc20-tokens-between-polygon-and-ethereum",
    "title": "Transfer ERC-20 tokens between Polygon & Ethereum",
    "description": "Learn how to bridge ERC-20 tokens between networks using the Polygon Proof of Stake bridge and SDK",
    "tags": ["Polygon", "JS/TS", "NodeJS", "Javascript", "Metamask"],
    "difficulty": "Beginner",
    "id": 130,
    "streamId": "kjzl6cwe1jw147t8ms3g174h59iibgc6qk4hrw5stqr5vcrnu5y936p2o8o3cmr"
  },
  {
    "slug": "create-a-blog-module",
    "title": "Create a blog module using Cosmos SDK",
    "description": "Learn how to create a simple blog app using the Cosmos SDK",
    "tags": ["Cosmos", "Go", "JS/TS", "CLI"],
    "difficulty": "Beginner",
    "id": 131,
    "streamId": "kjzl6cwe1jw149sn20cg51fy7ikyf8cfkwsdc2mjm494f9lycocu680c8d3incz"
  },
  {
    "slug": "add-the-contracts-pallets-to-a-runtime",
    "title": "Add the Contracts Pallets to a Runtime",
    "description": "Learn how to add a contract pallet to a runtime",
    "tags": ["Polkadot", "Rust", "Smart contracts"],
    "difficulty": "Beginner",
    "id": 132,
    "streamId": "kjzl6cwe1jw146jh6s6ytqur1e0ycom8ukn4p15qgbzmlk92mm1wqnx7grzh6bk"
  },
  {
    "slug": "build-a-polling-app",
    "title": "Build a polling app",
    "description": "Learn how to build a polling app using the Cosmos SDK",
    "tags": ["Cosmos", "Go", "CLI"],
    "difficulty": "Beginner",
    "id": 133,
    "streamId": "kjzl6cwe1jw147xk9qfp1biwy5xtpol84vzdt5upolqhgtxrjmlwckjggf1l5sv"
  },
  {
    "slug": "how-to-experiment-with-election-phragmen-pallet",
    "title": "How to experiment with Election Phragmen pallet",
    "description": "Learn how to make use of the Election Phragmen pallet",
    "tags": ["Polkadot", "Rust", "Rust"],
    "difficulty": "Beginner",
    "id": 134,
    "streamId": "kjzl6cwe1jw14ayqfaxvs891s14x492fe23pjehxzro6lccsi9cp7n0wsbqho3j"
  },
  {
    "slug": "creating-a-secret-contract-from-scratch",
    "title": "Developing your first secret contract",
    "description": "Learn the basics of creating a new secret contract from scratch.",
    "tags": ["Secret", "Rust", "Smart contracts", "Rust"],
    "difficulty": "Beginner",
    "id": 135,
    "streamId": "kjzl6cwe1jw147ya27lu7ipxxw13vu3aqi3p0zs61ty5m95h6dfmvjurzkrvdea"
  },
  {
    "slug": "stake-fungible-token-testing",
    "title": "Test Now Or Forever Hold Your Peace",
    "description": "Complete guide to unit testing your NEAR Rust smart contracts",
    "tags": ["Near", "Rust", "Smart contracts"],
    "difficulty": "Beginner",
    "id": 136,
    "streamId": "kjzl6cwe1jw14b48m1dndxlhlmvt8w5hgz5zjfkclm3s6up18pf2gpf59nhvygo"
  },
  {
    "slug": "oracle-contracts",
    "title": "Oracle Contracts",
    "description": "Learn how to get started with Oracle Contracts on Tezos",
    "tags": ["Tezos", "Python", "Smart contracts"],
    "difficulty": "Beginner",
    "id": 137,
    "streamId": "kjzl6cwe1jw14678jo0h0aqtrkz5tgehzzxqyxlfrw6ow9c14jyskqux6lbzmgh"
  },
  {
    "slug": "stake-pool-contract",
    "title": "It's Time to Put a STAKE Pool in the Ground!",
    "description": "OysterPack SMART STAKE Pool Contract - NEAR Staking Game Changer",
    "tags": ["Near", "Rust", "CLI"],
    "difficulty": "Beginner",
    "id": 138,
    "streamId": "kjzl6cwe1jw146tj6iaz5vh6knma1lm5afs2nyzbfdct6ndviy811y4ri16qzgf"
  },
  {
    "slug": "submit-terra-transactions",
    "title": "Submit your first transactions",
    "description": "Learn how to write to the Terra blockchain using DataHub",
    "tags": ["Terra", "JS/TS", "NodeJS", "Javascript"],
    "difficulty": "Beginner",
    "id": 139,
    "streamId": "kjzl6cwe1jw14aiziy6dj1x6nyjavtpy16rqokw1nd7iazwyq65nbsj2bvljwly"
  },
  {
    "slug": "interacting-with-terra-endpoints",
    "title": "Connecting to a Terra node with DataHub",
    "description": "Learn how to start using the Terra SDK with DataHub",
    "tags": ["Terra", "JS/TS", "NodeJS", "Javascript"],
    "difficulty": "Beginner",
    "id": 140,
    "streamId": "kjzl6cwe1jw146mshhm3ewc16fl73mg19wwj7ylcm8um1islu67p6qin3vzka4x"
  },
  {
    "slug": "unit-testing-in-solidity",
    "title": "Unit Testing in Solidity",
    "description": "How to write unit tests for Solidity smart contracts using Truffle's Assertions",
    "tags": ["Avalanche", "Solidity", "Truffle", "Solidity"],
    "difficulty": "Beginner",
    "id": 141,
    "streamId": "kjzl6cwe1jw145rlxkq14xmduifvl4k2ofik42ur0jhjh99cde7x4ak17mtdnq1"
  },
  {
    "slug": "metamask-with-matic-js",
    "title": "Using Metamask with Matic.js",
    "description": "Learn how to transfer tokens between Ethereum and Polygon (Matic)",
    "tags": ["Polygon", "JS/TS", "NodeJS", "Metamask"],
    "difficulty": "Beginner",
    "id": 142,
    "streamId": "kjzl6cwe1jw148nr7f7pcdkxe0z6sbizeezdugocli7sekesgrnlj6pgbjjbufu"
  },
  {
    "slug": "stake-fungible-token",
    "title": "The New and Improved Fungible Token Standard (NEP-141) Has Arrived",
    "description": "Complete guide to NEAR's new fungible token standard",
    "tags": ["Near", "JS/TS", "Rust", "Smart contracts"],
    "difficulty": "Beginner",
    "id": 143,
    "streamId": "kjzl6cwe1jw14b2zp8chh5qd2fntdatcdk9p177l97dtbmg18fantivbllilftu"
  },
  {
    "slug": "build-a-registry-dapp-on-near",
    "title": "Build a Registry dApp on NEAR",
    "description": "Learn how to build a complete registry dApp on NEAR and deploy it easily using Netlify",
    "tags": ["Near", "AssemblyScript", "AssemblyScript"],
    "difficulty": "Beginner",
    "id": 144,
    "streamId": "kjzl6cwe1jw147sc5zgvdvhwj33t9jb8icwsnnjau82sdy2yr0lqlnir7p8xez7"
  },
  {
    "slug": "stake-token-vision",
    "title": "It's Time to Put a STAKE in the Ground!",
    "description": "STAKE Token Vision - NEAR Game Changer",
    "tags": ["Near", "JS/TS", "Rust", "Smart contracts", "Rust"],
    "difficulty": "Beginner",
    "id": 145,
    "streamId": "kjzl6cwe1jw148i0xreh5icaiyy7798w9dej3voyp4xfwlb9xqmpnqbqyaydzbw"
  },
  {
    "slug": "creating-nfts",
    "title": "Creating NFTs",
    "description": "Learn how to create and interact a non-fungible token contract on Tezos",
    "tags": ["Tezos", "JS/TS", "NodeJS", "CLI"],
    "difficulty": "Beginner",
    "id": 146,
    "streamId": "kjzl6cwe1jw149tikmuu4twzpwsvu86hn4tvk26egss4812xm2pfkruvvy7kcln"
  },
  {
    "slug": "stake-fungible-token-nep141",
    "title": "You Can Have Your STAKE and Trade It Too",
    "description": "STAKE Fungible Token NEP-141 Rust Implementation",
    "tags": ["Near", "JS/TS", "Rust", "Smart contracts", "Rust"],
    "difficulty": "Beginner",
    "id": 147,
    "streamId": "kjzl6cwe1jw14aarssjhhqd25xupxmkvfffuo137zkl5viobl8rbg6e3v3gzsd9"
  },
  {
    "slug": "stake-account-storage-nep-145",
    "title": "Account Storage Standard (NEP-145)",
    "description": "Complete guide to NEAR's new account storage standard",
    "tags": ["Near", "JS/TS", "Rust", "Smart contracts", "Rust"],
    "difficulty": "Beginner",
    "id": 148,
    "streamId": "kjzl6cwe1jw14a46rm886y84h0zfvwq415aoo2v4rgt7j26zoop80d6pcozupys"
  },
  {
    "slug": "token-contracts",
    "title": "Token Contracts",
    "description": "Learn how to deploy and interact with a digital asset on Tezos",
    "tags": ["Tezos", "Python", "Smart contracts", "CLI"],
    "difficulty": "Beginner",
    "id": 149,
    "streamId": "kjzl6cwe1jw1489ldfy8bopj9cs1lbdwhrur0t2067sbv67cxb5bgafm14plat8"
  },
  {
    "slug": "deploy-a-subgraph-for-an-avalanche-smart-contract",
    "title": "Deploy a subgraph for an Avalanche smart contract",
    "description": "Learn how to deploy a Solidity smart contract to the Avalanche Fuji testnet using HardHat, then create and deploy its subgraph to the Subgraph Studio",
    "tags": ["The Graph", "GraphQL", "JS/TS", "GraphQL", "Hardhat"],
    "difficulty": "Beginner",
    "id": 150,
    "streamId": "kjzl6cwe1jw14bgdptrl5e61f92iv5vkbpcl0l1vmmp6hbc8bc96cudkp2oawzw"
  },
  {
    "slug": "implement-multisig-accounts-on-polkadot",
    "title": "Implement Multisig Accounts on Polkadot",
    "description": "In this tutorial we will cover the process of creating a multisig - an account which shares authority for transactions across multiple addresses.",
    "tags": ["Polkadot", "JS/TS", "NodeJS"],
    "difficulty": "Beginner",
    "id": 151,
    "streamId": "kjzl6cwe1jw148kupe5l85ejy1hlpv473qb0bpmbiwwluueutc3xkb1nqyzq3mz"
  },
  {
    "slug": "create-a-blockchain-skill-verification-system",
    "title": "Create a blockchain-based Skill Verification system",
    "description": "Learn how to implement your own skill verification system with a Polygon smart contract",
    "tags": ["Polygon", "JS/TS", "Solidity", "React", "Javascript"],
    "difficulty": "Beginner",
    "id": 152,
    "streamId": "kjzl6cwe1jw14au1w078vmepv4bog6ua1g4qjoa4y0goli6f7lvxu3ak1jhhr8i"
  },
  {
    "slug": "stake-pool-for-validators",
    "title": "OysterPack SMART STAKE Pool API Guide for Validators",
    "description": "OysterPack SMART STAKE Pool Contract API Guide - For Validators",
    "tags": ["Near", "Rust", "Rust", "CLI"],
    "difficulty": "Beginner",
    "id": 153,
    "streamId": "kjzl6cwe1jw14aq2wrni7pn2mj4y24oeq3yj41mjr2760ay83vucaxa0d7y6b9b"
  },
  {
    "slug": "nft-marketplace-in-assemblyscript",
    "title": "Create an NFT marketplace",
    "description": "Create smart contracts for a simple NFT Marketplace",
    "tags": [
      "Near",
      "AssemblyScript",
      "JS/TS",
      "Rust",
      "Smart contracts",
      "AssemblyScript"
    ],
    "difficulty": "Experienced",
    "id": 154,
    "streamId": "kjzl6cwe1jw14899v2inrne6e4u54q8h1ol771dlvbd47y7v6thc4k4k1gp6wsq"
  },
  {
    "slug": "create-nft-with-royalties",
    "title": "Create an NFT with royalties on Avalanche using Remix IDE",
    "description": "Learn how to create an NFT with royalties on Avalanche.",
    "tags": ["Avalanche", "Solidity", "Smart contracts", "Solidity", "Remix"],
    "difficulty": "Beginner",
    "id": 155,
    "streamId": "kjzl6cwe1jw14az1su73xlav7bis3p06lufetheb3r5cidgcgs0yezfs8p6s8co"
  },
  {
    "slug": "write-nft-contracts-in-rust",
    "title": "Write an NFT contract & mint your NFT",
    "description": "Learn how to create and interact with NFTs on NEAR",
    "tags": ["Near", "Rust", "Smart contracts", "Rust"],
    "difficulty": "Beginner",
    "id": 156,
    "streamId": "kjzl6cwe1jw145flzcvqjrzv78f1e1zsdxfh6y0szxj0kncvectps46t29xu7fr"
  },
  {
    "slug": "create-a-solana-nft-marketplace-with-metaplex",
    "title": "Create a Solana NFT marketplace and mint NFTs using Metaplex",
    "description": "Learn how to deploy a Metaplex marketplace that allows you to mint and sell your own NFTs on Solana",
    "tags": ["Solana", "Arweave"],
    "difficulty": "Beginner",
    "id": 157,
    "streamId": "kjzl6cwe1jw145k871oel3fpbns1wkkt9pdpm2pqsfwmkuaepa4n9mpox1qrjqy"
  },
  {
    "slug": "perform-forkless-upgrade-of-a-substrate-pallet",
    "title": "Perform a forkless upgrade of a Substrate pallet",
    "description": "Learn how to upgrade a Substrate pallet without forking the blockchain",
    "tags": ["Polkadot", "Rust", "Rust"],
    "difficulty": "Beginner",
    "id": 158,
    "streamId": "kjzl6cwe1jw146hs5qon77snx36xh28qpyjsjxq9bfe2bgzy593lt7lm1rrq34q"
  },
  {
    "slug": "celo-crowd-funding-project",
    "title": "Celo Crowd Funding Project Tutorial",
    "description": "Learn how to create a Smart Contract which facilitates crowdfunding.",
    "tags": [
      "Celo",
      "JS/TS",
      "Solidity",
      "Smart contracts",
      "Truffle",
      "Solidity"
    ],
    "difficulty": "Experienced",
    "id": 159,
    "streamId": "kjzl6cwe1jw149h3fz7dl7x135gk3eophfdb0t1adgzm6628hd6gt34lmk7qmd5"
  },
  {
    "slug": "unit-testing-python-smart-contracts-for-tezos-on-smartpy",
    "title": "Unit testing Python smart contracts for Tezos using SmartPy",
    "description": "Learn how to unit test Python smart contracts for Tezos using the SmartPy suite of tools",
    "tags": ["Tezos", "Python", "Smart contracts"],
    "difficulty": "Beginner",
    "id": 160,
    "streamId": "kjzl6cwe1jw147143ro9a3fqvobzoeijia52fskjdlsef9z4wu3khuss261mpl0"
  },
  {
    "slug": "build-an-nft-marketplace-using-hardhat",
    "title": "Build an NFT marketplace on Polygon using HardHat",
    "description": "Learn how to build an NFT marketplace smart contract and deploy it on Polygon using HardHat",
    "tags": [
      "Polygon",
      "JS/TS",
      "Solidity",
      "Smart contracts",
      "Solidity",
      "Hardhat"
    ],
    "difficulty": "Beginner",
    "id": 161,
    "streamId": "kjzl6cwe1jw147hq7hi1jr7mxeinir5m0dc3bsv0r33vntbluusz4u8tcmiig6r"
  },
  {
    "slug": "explore-an-existing-subgraph",
    "title": "Explore an existing subgraph",
    "description": "Learn how to explore an existing subgraph and visualize its data using a pie chart",
    "tags": ["The Graph", "JS/TS", "React", "GraphQL", "Javascript"],
    "difficulty": "Beginner",
    "id": 162,
    "streamId": "kjzl6cwe1jw14avbc1nytdkcltz5hdqxiis3npa7rg5kuh64b3z1hyq0rh6dhw4"
  },
  {
    "slug": "building-a-3d-art-gallery-using-unity3d-and-nethereum",
    "title": "Building a 3D art gallery using Unity3D and Nethereum",
    "description": "Learn how to make your own art gallery in Unity3D and interact with Polygon using C#",
    "tags": ["Polygon", "Smart contracts"],
    "difficulty": "Experienced",
    "id": 163,
    "streamId": "kjzl6cwe1jw14bbruq191d7u7beucqk17oi6vkfbnmyf0lou5hnm3ggeph8ng5o"
  },
  {
    "slug": "chainlink-vrf-on-polygon",
    "title": "Using the Chainlink Oracle for Randomness on Polygon",
    "description": "Learn how to use the Chainlink Oracle for verifiable randomness in your Polygon (Matic) smart contracts",
    "tags": ["Polygon", "JS/TS", "Solidity", "Javascript", "Solidity", "Remix"],
    "difficulty": "Beginner",
    "id": 164,
    "streamId": "kjzl6cwe1jw14bbn0gmahyjc2kln2zqukei48nhpwt0s3im30ip76kfky1avxgn"
  },
  {
    "slug": "build-a-crowdfunding-dapp-on-near",
    "title": "Build a Crowdfunding dApp on NEAR",
    "description": "Learn how to build a crowdfunding dApp on the NEAR blockchain with Rust and React",
    "tags": ["Near", "JS/TS", "Rust", "React", "Rust"],
    "difficulty": "Beginner",
    "id": 165,
    "streamId": "kjzl6cwe1jw14an2efxwz25dhy8csc1okvgwsj6x1tnru8s5fc5mxp14rgiyqss"
  },
  {
    "slug": "transfer-avax-from-c-chain-to-ethereum",
    "title": "Transfer AVAX from C-Chain to an Ethereum address",
    "description": "Learn how to transfer AVAX tokens from C-Chain to an Ethereum address",
    "tags": ["Avalanche", "JS/TS", "Javascript"],
    "difficulty": "Beginner",
    "id": 166,
    "streamId": "kjzl6cwe1jw145mk9119up8vvy9jcydkocyx0vyx473tf4q2r9eugpwzn7ht663"
  },
  {
    "slug": "create-an-avalanche-crowdfunding-app",
    "title": "Create a decentralized Kickstarter clone on Avalanche",
    "description": "Learn how to build a complete crowdfunding app using Avalanche",
    "tags": ["Avalanche", "JS/TS", "React", "Javascript", "Solidity"],
    "difficulty": "Beginner",
    "id": 167,
    "streamId": "kjzl6cwe1jw149b6phojd2jubyo2o26b8hko5ogarwhohdrpk43t6ro4gftlenc"
  },
  {
    "slug": "build-petgram-an-nft-sharing-dapp",
    "title": "How to build Petgram, an NFT sharing dApp",
    "description": "Learn how to build Petgram, an NFT sharing dApp similar to Instagram, then deploy it on Polygon",
    "tags": [
      "Polygon",
      "JS/TS",
      "Solidity",
      "Smart contracts",
      "Truffle",
      "Solidity"
    ],
    "difficulty": "Beginner",
    "id": 168,
    "streamId": "kjzl6cwe1jw1499n5rxuy4bh2ha2czztvccuqgr0xceymu55celbams5fean6a7"
  },
  {
    "slug": "transfer-erc20-from-c-chain-to-ethereum",
    "title": "Transfer ERC-20 tokens from C-Chain to an Ethereum address",
    "description": "Learn how to transfer ERC-20 tokens from C-Chain to Ethereum",
    "tags": ["Avalanche", "JS/TS", "Javascript"],
    "difficulty": "Beginner",
    "id": 169,
    "streamId": "kjzl6cwe1jw149rjvw4efrssm7gq6hme9302ppqud749yumsokw3tw5osxazbet"
  },
  {
    "slug": "build-a-quadratic-voting-dapp",
    "title": "Build a Quadratic Voting dApp",
    "description": "Learn how to make a quadratic voting app with collaboratively managed ranked lists",
    "tags": ["Polygon", "Solidity", "Truffle", "Solidity", "IPFS"],
    "difficulty": "Beginner",
    "id": 170,
    "streamId": "kjzl6cwe1jw14arswfcdan17dp111gnwdgntqwlfrt8l3uc7d8n88x5moq7haxo"
  },
  {
    "slug": "write-your-first-terra-smart-contract",
    "title": "Write your first Terra smart contract",
    "description": "Learn how to write a Terra smart contract",
    "tags": ["Terra", "Rust", "Smart contracts", "AssemblyScript", "Rust"],
    "difficulty": "Beginner",
    "id": 171,
    "streamId": "kjzl6cwe1jw145vwglewhd1t4gnunws93gii0rc5iyej8gy5fa998wjjcohrikr"
  },
  {
    "slug": "making-advanced-e-voting-dapp-avalanche-fuji-using-trufle",
    "title": "Advanced e-Voting dApp on Avalanche",
    "description": "Learn to build an advanced e-Voting dApp on Avalanche Fuji testnet using Trufflesuite",
    "tags": ["Avalanche", "JS/TS", "Solidity", "NodeJS", "Truffle", "Solidity"],
    "difficulty": "Beginner",
    "id": 172,
    "streamId": "kjzl6cwe1jw14abewxq2tm3ymqqkehrce2xkyw29opcodo9xl6o9jmx0q4j3wyv"
  },
  {
    "slug": "explaining-solanas-innovations-without-technical-jargon",
    "title": "Explaining Solana and its Innovations without technical jargon",
    "description": "Discover what makes Solana tick",
    "tags": ["Solana"],
    "difficulty": "Beginner",
    "id": 173,
    "streamId": "kjzl6cwe1jw149xmtstzuepdgq2cqlnx9zprutkbfr0sbx2wu17zq3vrndh6dxe"
  },
  {
    "slug": "interacting-with-a-terra-smart-contract",
    "title": "Interacting with a Terra smart contract",
    "description": "Learn how to interact with your own Terra smart contracts",
    "tags": ["Terra", "AssemblyScript", "AssemblyScript", "CLI"],
    "difficulty": "Beginner",
    "id": 174,
    "streamId": "kjzl6cwe1jw147dsx2y0hfhmkxnl0xv0jucofasgok8e8ka2iudulsavma5xnro"
  },
  {
    "slug": "polygon-smart-contract-unit-testing-with-truffle",
    "title": "Polygon smart contract unit testing with Truffle",
    "description": "Learn how to deploy & unit test smart contracts written in Solidity using Truffle",
    "tags": ["Polygon", "Solidity", "Truffle", "Solidity", "Metamask"],
    "difficulty": "Beginner",
    "id": 175,
    "streamId": "kjzl6cwe1jw148yqcomx7g7fsfe9qqwwgb44srunq74vmwcbnkf3xl90c9ufya3"
  },
  {
    "slug": "creating-your-first-terra-account-with-the-terra-sdk",
    "title": "Creating your first Terra account with the Terra SDK",
    "description": "Learn how to create an account to start building on Terra",
    "tags": ["Terra", "JS/TS", "NodeJS", "Javascript"],
    "difficulty": "Beginner",
    "id": 176,
    "streamId": "kjzl6cwe1jw147bx8ju2h9xvyzt5l5gyxr2ijofgjmp1kl1sg077lya7zh8j8lz"
  },
  {
    "slug": "substrate-kitties-overview",
    "title": "Substrate Kitties Overview",
    "description": "Learn how to make a dApp on Polkadot",
    "tags": ["Polkadot", "Rust", "Rust"],
    "difficulty": "Beginner",
    "id": 177,
    "streamId": "kjzl6cwe1jw146zt6hbtn8nbuz18k5s5oc2yo798ljo6vroh30ttqbyfvltpwr4"
  },
  {
    "slug": "unit-testing-subgraphs",
    "title": "Writing Unit Tests for Subgraphs",
    "description": "Learn how to write unit tests for subgraphs with matchstick",
    "tags": ["The Graph", "JS/TS", "GraphQL", "Javascript"],
    "difficulty": "Beginner",
    "id": 178,
    "streamId": "kjzl6cwe1jw1499v7a5zpsghiephxcdv657p0ej1ssnyjockfnsnihxv7ijea5p"
  },
  {
    "slug": "create-an-amm-on-avalanche",
    "title": "Create an Automated Market Maker (AMM) on Avalanche",
    "description": "Learn how to build a basic AMM with Provide, Withdraw and Swap functions",
    "tags": ["Avalanche", "JS/TS", "Solidity", "React", "Solidity"],
    "difficulty": "Beginner",
    "id": 179,
    "streamId": "kjzl6cwe1jw14acyanvan57pssekw9k7uoycnsu0qlyb1sf9irooyoeiw5ilsyk"
  },
  {
    "slug": "transfer-nfts-using-the-polygon-pos-bridge-and-sdk",
    "title": "Transfer NFTs (ERC721 & ERC1155) using the Polygon PoS Bridge & SDK ",
    "description": "Learn how to transfer tokens between Polygon and Ethereum using the Proof of Stake bridge and SDK",
    "tags": ["Polygon", "JS/TS", "Javascript"],
    "difficulty": "Beginner",
    "id": 180,
    "streamId": "kjzl6cwe1jw14a90yit4dp5fzw9cdxmscz8d5zo0odmxst2081tswy4cqrlto2x"
  },
  {
    "slug": "build-a-crowdfunding-platform-on-solana",
    "title": "Build a Crowdfunding platform on Solana",
    "description": "Learn how to create and deploy a Crowdfunding dApp on Solana",
    "tags": ["Solana", "JS/TS", "Rust", "React", "Javascript", "Rust"],
    "difficulty": "Beginner",
    "id": 182,
    "streamId": "kjzl6cwe1jw148pzvwv9a484iaxlvn37jwb7q8emqx16460r90bz5qvslxvnw62"
  },
  {
    "slug": "stake-monetize-near-smart-contracts",
    "title": "Show Me the Money: Learn How to Monetize NEAR Smart Contracts",
    "description": "Learn how to design, build, and monetize smart contracts on the NEAR blockchain",
    "tags": ["Near", "JS/TS", "Rust", "Smart contracts"],
    "difficulty": "Beginner",
    "id": 183,
    "streamId": "kjzl6cwe1jw14b72xiag2352uhkolryw1h0apsem9giad7dmnjreitzp2jsm4rp"
  },
  {
    "slug": "explaining-solana-with-the-simpsons",
    "title": "Explaining Solana with The Simpsons",
    "description": "Learn about the technical innovations of Solana with pop culture icons The Simpsons",
    "tags": ["Solana"],
    "difficulty": "Beginner",
    "id": 184,
    "streamId": "kjzl6cwe1jw145y80g0xm4xzs9q9ez98vnmajirrsq5u2io9gc2b472a3v3owlt"
  },
  {
    "slug": "substrate-kitties-setup",
    "title": "Substrate Kitties - Basic Setup",
    "description": "Learn how to use the Substrate Node template",
    "tags": ["Polkadot", "Rust", "Rust"],
    "difficulty": "Beginner",
    "id": 185,
    "streamId": "kjzl6cwe1jw14biwaaeeuamkglc0dtu0uew20x8kv3wes4bdq29u7rfu6dq7fhu"
  },
  {
    "slug": "transfer-avax-between-the-x-chain-and-c-chain",
    "title": "Transfer AVAX Between the X-Chain and C-Chain",
    "description": "Learn how to transfer AVAX between chains",
    "tags": ["Avalanche", "JS/TS", "Javascript", "CLI"],
    "difficulty": "Beginner",
    "id": 200,
    "streamId": "kjzl6cwe1jw147gspxo7h3cdenzguzg2wagauvcvrd2b0mvda5a1rt2e8arlgji"
  }
]
